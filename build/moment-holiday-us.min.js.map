{"version":3,"sources":["moment-holiday.js","united_states.js"],"names":["findHolidays","self","holidays","adjust","parse","holidayObj","h","arrayify","moment","active","i","length","find","findHoliday","merge","concat","getLocale","locale","regions","split","toLowerCase","replace","shift","path","__dirname","slice","pop","require","e","compileRegions","holidayLoop","count","forward","getAllHolidays","l","y","year","w","d","hd","b","add","subtract","Object","keys","hasOwnProperty","b2","ha","hi","isSame","push","amd","this","parserExtensions","parseHoliday","date","pd","days","pe","isMoment","charAt","match","range","dates","m","ds","td","ii","parseInt","month","wd","dt","startOf","limit","endOf","diff","wds","wi","day","ai","di","keywordMatches","str","kw","f","RegExp","holiday","pt","wn","obj","fk","findKey","filter","keywords_n","keywords_y","matchesY","keywords","matches","o","n","r","regions_n","join","indexOf","arr","constructor","Array","o1","o2","assign","fn","single","dKeys","isHoliday","hs","returnTitle","previousHoliday","previousHolidays","nextHoliday","nextHolidays","holidaysBetween","Date","active_last","modifyHolidays","set","specifics","newH","k","is","remove","undo","c","load","locales","extendParser","func","module","exports","call","united_states","New Year's Day","Martin Luther King Jr. Day","Valentine's Day","Washington's Birthday","Saint Patrick's Day","Good Friday","Easter Sunday","Memorial Day","Mother's Day","Father's Day","Independence Day","Labor Day","Columbus Day","Halloween","Veteran's Day","Thanksgiving Day","Day after Thanksgiving","Christmas Eve","Christmas Day","New Year's Eve"],"mappings":"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","file":"moment-holiday-us.min.js","sourcesContent":["//! moment-holiday.js\r\n//! version : 1.5.1\r\n//! author : Kodie Grantham\r\n//! license : MIT\r\n//! https://github.com/kodie/moment-holiday\r\n\r\n(function() {\r\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\r\n\r\n  var parserExtensions = [];\r\n\r\n  var parseHoliday = function(self, date, adjust) {\r\n    var days = [], pd;\r\n\r\n    for (var i = 0; i < parserExtensions.length; i++) {\r\n      var pe = parserExtensions[i](self, date);\r\n      if (pe || pe === false) { pd = pe; }\r\n    }\r\n\r\n    if (pd === false) { return false; }\r\n    if (typeof pd === 'string') { date = pd; } else if (pd) { days = pd; }\r\n\r\n    if (!moment.isMoment(days) && !days.length && date.charAt(0).match(/[0-9(]/)) {\r\n      var range = false;\r\n      var dates = date.split('|');\r\n\r\n      if (dates.length > 1) { range = true; }\r\n      if (dates.length > 2) { dates = [dates[0], dates[1]]; }\r\n\r\n      for (var i = 0; i < dates.length; i++) {\r\n        var m = moment(self);\r\n        var ds = dates[i].split('/');\r\n\r\n        if (ds.length === 1 || (ds.length === 2 && ds[1].charAt(0) !== '(' && ds[1].length === 4)) {\r\n          var td = dates[i];\r\n          i = -1;\r\n          dates = [];\r\n          for (var ii = 1; ii < 13; ii++) { dates.push(ii + '/' + td); }\r\n          continue;\r\n        }\r\n\r\n        if (ds.length > 2) { m.year(parseInt(ds[2])); }\r\n\r\n        m.month((parseInt(ds[0]) - 1));\r\n\r\n        if (ds[1].charAt(0) === '(') {\r\n          var w = ds[1].slice(1, -1).split(',');\r\n          var wd = parseInt(w[0]);\r\n          var dt = parseInt(w[1]);\r\n          var d = moment(m).startOf('month');\r\n          var limit = (moment(m).endOf('month').diff(d, 'days') + 1);\r\n          var wds = [];\r\n\r\n          if (w[1] && w[1].charAt(0) === '[') {\r\n            var forward = true;\r\n            dt = parseInt(w[1].slice(1, -1));\r\n\r\n            if (dt < 0) {\r\n              forward = false;\r\n              dt = parseInt(w[1].slice(2, -1));\r\n            }\r\n\r\n            d = moment(m).date(dt);\r\n\r\n            for (var wi = 0; wi < 7; wi++) {\r\n              if (d.day() === wd) { days.push(moment(d)); break; }\r\n\r\n              if (forward) {\r\n                d.add(1, 'day');\r\n              } else {\r\n                d.subtract(1, 'day');\r\n              }\r\n            }\r\n\r\n            continue;\r\n          }\r\n\r\n          for (var ai = 0; ai < limit; ai++) {\r\n            if (d.day() === wd) { wds.push(moment(d)); }\r\n            d.add(1, 'day');\r\n          }\r\n\r\n          if (!dt) {\r\n            days = days.concat(wds);\r\n            continue;\r\n          } else if (dt < 0) {\r\n            m = wds[wds.length + dt];\r\n          } else {\r\n            m = wds[dt - 1];\r\n          }\r\n\r\n          days.push(m);\r\n        } else {\r\n          days.push(m.date(ds[1]));\r\n        }\r\n      }\r\n\r\n      if (range && days.length > 1) {\r\n        var diff = days[1].diff(days[0], 'days');\r\n\r\n        if (diff > 1) {\r\n          var di = moment(days[0]);\r\n          days = [days[0]];\r\n\r\n          for (var i = 0; i < diff; i++) {\r\n            di.add(1, 'day');\r\n            days.push(moment(di));\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    days = arrayify(days);\r\n\r\n    for (var i = 0; i < days.length; i++) {\r\n      if (!moment.isMoment(days[i])) { delete(days[i]); continue; }\r\n\r\n      if (adjust) {\r\n        if (days[i].day() === 0) { days[i] = days[i].add(1, 'day'); }\r\n        if (days[i].day() === 6) { days[i] = days[i].subtract(1, 'day'); }\r\n      }\r\n\r\n      days[i] = days[i].startOf('day');\r\n    }\r\n\r\n    if (!days.length) { return false; }\r\n    if (days.length === 1) { return days[0]; }\r\n\r\n    return days;\r\n  };\r\n\r\n  var keywordMatches = function(str, kw) {\r\n    var m = [];\r\n    kw = arrayify(kw);\r\n\r\n    for (var i = 0; i < kw.length; i++) {\r\n      var f = str.match(new RegExp(kw[i], 'gi'));\r\n      if (f) { m = m.concat(f); }\r\n    }\r\n\r\n    return m;\r\n  };\r\n\r\n  var findHoliday = function(self, holiday, adjust, parse, holidayObj) {\r\n    var pt = {};\r\n    var wn = [];\r\n    var obj = {};\r\n\r\n    h = holidayObj || moment.holidays.active;\r\n\r\n    if (h.hasOwnProperty(holiday)) {\r\n      wn.push(holiday);\r\n    } else if (fk = findKey(holiday, h)) {\r\n      wn.push(fk);\r\n    } else {\r\n      for (var hd in h) {\r\n        if (!h.hasOwnProperty(hd)) { continue; }\r\n\r\n        pt[hd] = keywordMatches(holiday, hd.split(/[\\s,.-]+/).filter(function(w){ return w.length > 2; })).length;\r\n\r\n        if (h[hd].keywords_n) {\r\n          var matchesN = keywordMatches(holiday, h[hd].keywords_n);\r\n          if (matchesN.length) {\r\n            pt[hd] = 0;\r\n            continue;\r\n          }\r\n        }\r\n\r\n        if (h[hd].keywords_y) {\r\n          var matchesY = keywordMatches(holiday, h[hd].keywords_y);\r\n          if (matchesY && matchesY.length === h[hd].keywords_y.length) {\r\n            pt[hd] += matchesY.length;\r\n          } else {\r\n            pt[hd] = 0;\r\n            continue;\r\n          }\r\n        }\r\n\r\n        if (h[hd].keywords) {\r\n          var matches = keywordMatches(holiday, h[hd].keywords);\r\n          if (matches) {\r\n            pt[hd] += matches.length;\r\n          } else {\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n\r\n      //console.log(pt); // Display scores\r\n\r\n      for (var w in pt) {\r\n        if (!pt[w] || !pt.hasOwnProperty(w)) { continue; }\r\n        if (!wn.length || pt[w] === pt[wn[0]]) { wn.push(w); continue; }\r\n        if (pt[w] > pt[wn[0]]) { wn = [w]; continue; }\r\n      }\r\n    }\r\n\r\n    if (!wn.length) { return false; }\r\n\r\n    if (parse !== false) {\r\n      for (var i = 0; i < wn.length; i++) {\r\n        var d = parseHoliday(self, h[wn[i]].date, adjust);\r\n        if (d) { obj[wn[i]] = d; }\r\n      }\r\n\r\n      if (Object.keys(obj).length) { return obj; }\r\n    } else {\r\n      return wn;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  var findHolidays = function(self, holidays, adjust, parse, holidayObj) {\r\n    var h = [];\r\n    if (parse) { h = {}; }\r\n\r\n    holidays = arrayify(holidays);\r\n    if (!holidayObj) { holidayObj = moment.holidays.active; }\r\n\r\n    for (var i = 0; i < holidays.length; i++) {\r\n      var find = findHoliday(self, holidays[i], adjust, parse, holidayObj);\r\n\r\n      if (find) {\r\n        if (parse) {\r\n          h = merge(h, find);\r\n        } else {\r\n          h = h.concat(find);\r\n        }\r\n      }\r\n    }\r\n\r\n    return h;\r\n  };\r\n\r\n  var getAllHolidays = function(self, adjust) {\r\n    var h = moment.holidays.active;\r\n    var d = {};\r\n\r\n    for (var hd in h) {\r\n      if (!h.hasOwnProperty(hd)) { continue; }\r\n      if (td = parseHoliday(self, h[hd].date, adjust)) { d[hd] = td; }\r\n    }\r\n\r\n    return d;\r\n  };\r\n\r\n  var compileRegions = function(locale, regions) {\r\n    var h = moment.holidays[locale];\r\n    var o = {};\r\n\r\n    if (h) {\r\n      for (var i = 0; i < regions.length; i++) {\r\n        var r = regions[i].toLowerCase();\r\n        var l = moment.holidays[locale + '/' + r];\r\n        l = {};\r\n\r\n        for (var hd in h) {\r\n          if (!h.hasOwnProperty(hd)) { continue; }\r\n\r\n          var y = h[hd].regions || [];\r\n          var n = h[hd].regions_n || [];\r\n\r\n          if (y.length) { y.join().toLowerCase().split(); }\r\n          if (n.length) { n.join().toLowerCase().split(); }\r\n\r\n          if ((!y.length && !n.length) || (y.length && ~y.indexOf(r)) || (n.length && !~n.indexOf(r))) {\r\n            l[hd] = h[hd];\r\n          }\r\n        }\r\n\r\n        if (l) { o = merge(o, l); }\r\n      }\r\n    }\r\n\r\n    if (!Object.keys(o).length) { return false; }\r\n\r\n    return o;\r\n  };\r\n\r\n  var getLocale = function(locale) {\r\n    regions = locale.split('/');\r\n    locale = regions[0].toLowerCase().replace(' ', '_');\r\n    regions.shift();\r\n\r\n    if (!moment.holidays[locale]) {\r\n      try {\r\n        var path = './locale/';\r\n        if (__dirname.split('/').slice(-1).pop() == 'build') { path = '.' + path; }\r\n        require(path + locale);\r\n      } catch(e) { }\r\n    }\r\n\r\n    if (moment.holidays[locale]) {\r\n      if (regions.length) { return compileRegions(locale, regions); }\r\n      return moment.holidays[locale];\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  var holidayLoop = function(self, count, forward, adjust) {\r\n    if (!count) { count = 1; }\r\n\r\n    var h = getAllHolidays(self, adjust);\r\n    var l = moment(self);\r\n    var y = self.year();\r\n    var w = [];\r\n\r\n    for (var i = 0; i < count; i++) {\r\n      var d = moment(l);\r\n\r\n      while (true) {\r\n        var b = false;\r\n\r\n        if (forward) {\r\n          d.add(1, 'day');\r\n        } else {\r\n          d.subtract(1, 'day');\r\n        }\r\n\r\n        if (d.year() !== y) {\r\n          h = getAllHolidays(d, adjust);\r\n          y = d.year();\r\n        }\r\n\r\n        if (!Object.keys(h).length) { b = true; break; }\r\n\r\n        for (var hd in h) {\r\n          if (!h.hasOwnProperty(hd)) { continue; }\r\n\r\n          var b2 = false;\r\n          var ha = arrayify(h[hd]);\r\n\r\n          for (var hi = 0; hi < ha.length; hi++) {\r\n            if (d.isSame(ha[hi], 'day')) {\r\n              w.push(ha[hi]);\r\n              l = moment(d);\r\n              b2 = true;\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (b2) { b = true; break; }\r\n        }\r\n\r\n        if (b) { break; }\r\n      }\r\n    }\r\n\r\n    if (!w.length) { return false; }\r\n    if (w.length === 1) { return w[0]; }\r\n\r\n    return w;\r\n  };\r\n\r\n  var arrayify = function(arr) {\r\n    if (arr && arr.constructor !== Array) { return [arr]; }\r\n    return arr;\r\n  };\r\n\r\n  var findKey = function(find, obj) {\r\n    if (obj.constructor === Object) { obj = Object.keys(obj); }\r\n    for (var i = 0; i < obj.length; i++) {\r\n      if (find.toLowerCase() === obj[i].toLowerCase()) { return obj[i]; }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  var merge = function(o1, o2) {\r\n    return Object.assign({}, o1, o2);\r\n  };\r\n\r\n  moment.fn.holiday = function(holidays, adjust) {\r\n    var h = moment.holidays.active;\r\n    var d = {};\r\n    var single = false;\r\n\r\n    if (!holidays) {\r\n      d = getAllHolidays(this, adjust);\r\n    } else {\r\n      if (holidays.constructor !== Array) {\r\n        single = true;\r\n        holidays = [holidays];\r\n      }\r\n\r\n      for (var i = 0; i < holidays.length; i++) {\r\n        if (td = findHoliday(this, holidays[i], adjust)) { d = Object.assign({}, d, td); }\r\n      }\r\n    }\r\n\r\n    var dKeys = Object.keys(d);\r\n\r\n    if (!dKeys.length) { return false; }\r\n    if (dKeys.length === 1 && single) { return d[dKeys[0]]; }\r\n\r\n    return d;\r\n  };\r\n\r\n  moment.fn.holidays = function(holidays, adjust) {\r\n    return this.holiday(holidays, adjust);\r\n  };\r\n\r\n  moment.fn.isHoliday = function(holidays, adjust) {\r\n    var h, returnTitle, hs = [];\r\n\r\n    if (holidays) {\r\n      holidays = arrayify(holidays);\r\n      h = this.holiday(holidays, adjust);\r\n      returnTitle = false;\r\n    } else {\r\n      h = getAllHolidays(this, adjust);\r\n      returnTitle = true;\r\n    }\r\n\r\n    if (!h) { return false; }\r\n\r\n    for (var hd in h) {\r\n      if (!h.hasOwnProperty(hd)) { continue; }\r\n\r\n      var ha = arrayify(h[hd]);\r\n\r\n      for (var hi = 0; hi < ha.length; hi++) {\r\n        if (this.isSame(ha[hi], 'day')) {\r\n          if (returnTitle) {\r\n            hs.push(hd);\r\n          } else {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (hs.length) {\r\n      if (hs.length === 1) { return hs[0]; }\r\n      return hs;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  moment.fn.previousHoliday = function(count, adjust) {\r\n    return holidayLoop(this, count, false, adjust);\r\n  };\r\n\r\n  moment.fn.previousHolidays = function(count, adjust) {\r\n    return this.previousHoliday(count, adjust);\r\n  };\r\n\r\n  moment.fn.nextHoliday = function(count, adjust) {\r\n    return holidayLoop(this, count, true, adjust);\r\n  };\r\n\r\n  moment.fn.nextHolidays = function(count, adjust) {\r\n    return this.nextHoliday(count, adjust);\r\n  };\r\n\r\n  moment.fn.holidaysBetween = function(date, adjust) {\r\n    if (!date) { date = new Date(); }\r\n    date = moment(date).subtract(1, 'day');\r\n\r\n    var h = getAllHolidays(this, adjust);\r\n    var d = moment(this);\r\n    var y = d.year();\r\n    var w = [];\r\n\r\n    for (var i = 0; i < date.diff(this, 'days'); i++) {\r\n      d.add(1, 'day');\r\n\r\n      if (d.year() !== y) {\r\n        h = getAllHolidays(d, adjust);\r\n        y = d.year();\r\n      }\r\n\r\n      if (!Object.keys(h).length) { break; }\r\n\r\n      for (var hd in h) {\r\n        var b = false;\r\n        var ha = arrayify(h[hd]);\r\n\r\n        for (var hi = 0; hi < ha.length; hi++) {\r\n          if (d.isSame(ha[hi], 'day')) {\r\n            w.push(ha[hi]);\r\n            b = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (b) { break; }\r\n      }\r\n    }\r\n\r\n    if (!w.length) { return false; }\r\n\r\n    return w;\r\n  };\r\n\r\n  moment.holidays = {\r\n    active: {},\r\n    active_last: {}\r\n  };\r\n\r\n  moment.modifyHolidays = {\r\n    set: function(holidays, specifics) {\r\n      var newH = {};\r\n\r\n      if (holidays.constructor === Array) {\r\n        var hs = [];\r\n\r\n        for (var i = 0; i < holidays.length; i++) {\r\n          var d = findHoliday(this, holidays[i], null, false);\r\n          if (d) { hs = hs.concat(d); }\r\n        }\r\n\r\n        if (hs.length) {\r\n          newH = merge(moment.holidays.active);\r\n\r\n          for (var hd in newH) {\r\n            if (!newH.hasOwnProperty(hd)) { continue; }\r\n            if (!~hs.indexOf(hd)) { delete(newH[hd]); }\r\n          }\r\n        }\r\n      } else if (typeof holidays === 'string') {\r\n        var locale = getLocale(holidays);\r\n\r\n        if (locale) {\r\n          if (specifics) {\r\n            var k = findHolidays(this, specifics, false, false, locale);\r\n            for (var i = 0; i < k.length; i++) { newH[k[i]] = merge(locale[k[i]]); }\r\n          } else {\r\n            newH = merge(locale);\r\n          }\r\n        }\r\n      } else {\r\n        newH = holidays;\r\n      }\r\n\r\n      if ((Object.keys(newH).length || holidays === newH) && !Object.is(moment.holidays.active, newH)) {\r\n        moment.holidays.active_last = merge(moment.holidays.active);\r\n        moment.holidays.active = newH;\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    add: function(holidays, specifics) {\r\n      if (typeof holidays === 'string') {\r\n        var locale = getLocale(holidays);\r\n        holidays = {};\r\n\r\n        if (locale) {\r\n          if (specifics) {\r\n            var k = findHolidays(this, specifics, false, false, locale);\r\n            for (var i = 0; i < k.length; i++) { holidays[k[i]] = merge(locale[k[i]]); }\r\n          } else {\r\n            holidays = locale;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (Object.keys(holidays).length) {\r\n        moment.holidays.active_last = merge(moment.holidays.active);\r\n        moment.holidays.active = merge(moment.holidays.active, holidays);\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    remove: function(holidays) {\r\n      holidays = arrayify(holidays);\r\n\r\n      var find = findHolidays(this, holidays, false, false);\r\n      var newH = merge(moment.holidays.active);\r\n\r\n      if (find) {\r\n        for (var i = 0; i < find.length; i++) { delete(newH[find[i]]); }\r\n      }\r\n\r\n      if (!Object.is(moment.holidays.active, newH)) {\r\n        moment.holidays.active_last = merge(moment.holidays.active);\r\n        moment.holidays.active = newH;\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    undo: function() {\r\n      var c = merge(moment.holidays.active);\r\n      moment.holidays.active = merge(moment.holidays.active_last);\r\n      moment.holidays.active_last = c;\r\n      return this;\r\n    },\r\n\r\n    load: function(locales) {\r\n      locales = arrayify(locales);\r\n      for (var i = 0; i < locales.length; i++) { getLocale(locales[i]); }\r\n      return this;\r\n    },\r\n\r\n    extendParser: function(func) {\r\n      parserExtensions.push(func);\r\n      return this;\r\n    }\r\n  };\r\n\r\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\r\n}).call(this);\r\n","//! moment-holiday.js locale configuration\r\n//! locale : United States\r\n//! author : Kodie Grantham : https://github.com/kodie\r\n\r\n(function() {\r\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\r\n\r\n  moment.holidays.united_states = {\r\n    \"New Year's Day\": {\r\n      date: '1/1',\r\n      keywords_n: ['eve']\r\n    },\r\n    \"Martin Luther King Jr. Day\": {\r\n      date: '1/(1,3)',\r\n      keywords: ['mlk']\r\n    },\r\n    \"Valentine's Day\": {\r\n      date: '2/14'\r\n    },\r\n    \"Washington's Birthday\": {\r\n      date: '2/(1,3)',\r\n      keywords: ['george', 'president', 'day']\r\n    },\r\n    \"Saint Patrick's Day\": {\r\n      date: '3/17',\r\n      keywords: ['st[\\\\s\\\\.]', 'paddy', 'patty']\r\n    },\r\n    \"Good Friday\": {\r\n      date: 'easter-2',\r\n      keywords_y: ['good', 'friday']\r\n    },\r\n    \"Easter Sunday\": {\r\n      date: 'easter',\r\n      keywords_y: ['easter'],\r\n      keywords: ['sunday']\r\n    },\r\n    \"Memorial Day\": {\r\n      date: '5/(1,-1)'\r\n    },\r\n    \"Mother's Day\": {\r\n      date: '5/(0,2)',\r\n      keywords: ['mom']\r\n    },\r\n    \"Father's Day\": {\r\n      date: '6/(0,3)',\r\n      keywords: ['dad']\r\n    },\r\n    \"Independence Day\": {\r\n      date: '7/4',\r\n      keywords: ['4th', 'fourth', 'july']\r\n    },\r\n    \"Labor Day\": {\r\n      date: '9/(1,1)',\r\n      keywords: ['labour']\r\n    },\r\n    \"Columbus Day\": {\r\n      date: '10/(1,2)',\r\n      keywords: ['christopher']\r\n    },\r\n    \"Halloween\": {\r\n      date: '10/31'\r\n    },\r\n    \"Veteran's Day\": {\r\n      date: '11/11',\r\n      keywords: ['vet']\r\n    },\r\n    \"Thanksgiving Day\": {\r\n      date: '11/(4,4)',\r\n      keywords: ['thanks', 'turkey'],\r\n      keywords_n: ['after']\r\n    },\r\n    \"Day after Thanksgiving\": {\r\n      date: '11/(5,4)',\r\n      keywords: ['thanks', 'turkey'],\r\n      keywords_y: ['after']\r\n    },\r\n    \"Christmas Eve\": {\r\n      date: '12/24',\r\n      keywords: ['christ', 'x-?mas'],\r\n      keywords_y: ['eve']\r\n    },\r\n    \"Christmas Day\": {\r\n      date: '12/25',\r\n      keywords: ['christ', 'x-?mas'],\r\n      keywords_n: ['eve']\r\n    },\r\n    \"New Year's Eve\": {\r\n      date: '12/31',\r\n      keywords_y: ['year', 'eve']\r\n    }\r\n  };\r\n\r\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\r\n}).call(this);\r\n"]}